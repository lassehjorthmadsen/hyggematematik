---
title: "Parabler"
---

```{r setup}
library(tidyverse)
theme_set(theme_minimal())
```

## Hvad er parabler? {#sec-parabler}

Parabler er den kurve som andengradsligninger danner, når man plotter dem i et koordinatsystem. Parabler er gode, for de er ikke specielt svære og når man plotter dem, er de ret flotte.

## Den generelle formel

Den generelle formel for en andengradsligning ser, som du måske allerede ved, sådan her ud:

$$ f(x) = ax^2 + bx + c $$

Når man plotter den i et koordinatsystem med en x-akse og en y-akse, siger man bare, at $y=f(x)$ sådan her:

$$ y = f(x) = ax^2 + bx + c $$

Lad os tegne den mest enkle parabel, man kan forestille sig. Vi siger at $a=1$, $b=0$ og $c=0$. Dermed bliver opgaven at tegne kurven:

$$y=x^2$$

Det ser sådan her ud:

```{r plot1}
a = 1; b = 0; c = 0
x = seq(-5, 5, by = 0.1)

f <- function(x, a, b, c) a*x^2 + b*x +c

data <- tibble(x = x, y = f(x, a, b, c))
punkter <- tibble(x = c(-3, 0, 3), y = f(x, a, b, c))

ggplot(data, aes(x, y)) +
  geom_line(color = "blue", size = 1) +
  geom_point(data = punkter, size = 2) +
  geom_segment(x = 0, xend = 0, y = 0, yend = 26, color = "black",
               arrow = arrow(type = "closed", 
                             length = unit(6, "points"))) +
  scale_x_continuous(breaks = seq(-5, 5, by = 1)) +
  scale_y_continuous(breaks = seq(0, 25, by = 2)) +
  labs(title = "En meget enkel parabel") 
```

Et par hurtige observationer:

- Vi ser nemt, at parablen er *symmetrisk* omkring y-aksen. Det er fordi, at $-x^2 = x^2$ så negative x-værdier giver samme y-værdi, som til tilsvarende positive x-værdier. For eksempel er de to punkter $(-3, 9)$ og $(3, 9)$ markeret med en prik. Altså: $3^2 = -3^2 = 9$.

- Vi ser også at y aldrig er negativ. Det er af samme grund som skaber symmetrien: Alle tal opløftet til 2 giver noget positivt. Eller lidt mere formelt, ligningen: $x^2 < 0$ har ingen løsninger, hvilket man kan skrive sådan her, $x \in \emptyset$, hvis man gerne vil være meget matematisk.

- Endelig ligger parablens *toppunkt* lige præcis i punktet $(0,0)$. Udtrykket toppunkt er måske lidt misvisende, for på en måde er det *bundpunktet*, altså den mindste y-værdi vi kan finde på kurven. Når vi taler om parabler, bruges udtrykket toppunkt tit om grafens maksimum *eller* minimum. Her er toppunktet $(0,0)$ parablens *minimum*.


## Hvis man ændrer $a$ ...

Lad os se på hvad der sker, hvis man ændrer $a$ (som vi til en start bare satte til 1). Vi prøver med $a = 1,2,3$ og sætter stadig $b=0$ og $c=0$. Her er et plot med tre parabler (hvor vi klarer os uden y-aksen, så den ikke kommer i vejen):


```{r plot2}
data <- expand_grid(x, a = c(1, 2, 3)) |> 
  mutate(y = f(x, a, 0, 0))

ggplot(data, aes(x, y, color = factor(a), group = a)) +
  geom_line(size = 1) +
  scale_x_continuous(breaks = seq(-5, 5, by = 1)) +
  scale_y_continuous(breaks = seq(0, 25, by = 2), limits = c(0, 25)) +
    labs(title = "Tre ret enkle enkel parabler", color = "a")
```

Vi kan se, at $a$ betyder noget for, hvor *stejl* parablen er. Det er ikke så mærkeligt, for når vi gange med et større og større tal ($x = 1, 2, 3$) så bliver y jo hver gang *endnu* større. Altså: $3x^2 > 2x^2 > x^2$.

Måske kan du allerede nu se, hvad der sker, hvis $a$ er negativ? Lad os prøve at lave et plot også med negative $a$-værdier: $a = -3, -2, -1, 1, 2, 3$

```{r plot3}
data <- expand_grid(x, a = c(-3, -2, -1, 1, 2, 3)) |> 
  mutate(y = f(x, a, 0, 0))

ggplot(data, aes(x, y, color = factor(a), group = a)) +
  geom_line(size = 1) +
  scale_x_continuous(breaks = seq(-5, 5, by = 1)) +
  scale_y_continuous(limits = c(-25, 25)) +
    labs(title = "Seks ret enkle enkel parabler", color = "a")
```

Når $a$ er lig -1 i stedet for 1, bliver alle y-værdierne jo bare negative tal. Parablerne med negative værdier for $a$ bliver derfor bare spejlbilleder af deres søskende med positive $a$-værdier.

Nogle gange husker man det ved at tænke på parblerne som *glade* (positive $a$-værdier) eller *sure* (negative $a$-værdier). *Størrelsen* af $a$ fortæller så, *hvor* glade eller sure parablerne er.

Læg mærke til, at hvis $a=0$ så bliver vores andengradsligning til: $y = 0 \cdot x^2 + bx + c = bx + c$ hvilket bare er det samme som en ret linje: $y = ax + b$ (bortset fra at vi her bruger bogstaverne $a$ og $b$) og altså slet ikke nogen parabel. 

## Hvis man ændrer $b$ ...

Nok om $a$, lad os se på $b$ i formlen $y = ax^2 + bx + c$. Igen sætter vi $a=1$ og $c=0$, men denne gang prøver vi med et to forskellige værdier af $b$, $b=0,4$.

```{r plot4}
data <- expand_grid(x, b = c(0, 4)) |> 
  mutate(y = f(x, 1, b, 0))

punkter <- tibble(x = c(-2, 0), y = c(-4, 0))

p4 <- ggplot(data, aes(x, y, color = factor(b), group = b)) +
  geom_line(size = 1) +
  geom_point(data = punkter, color = "black", size = 2) +
  scale_x_continuous(breaks = seq(-5, 5, by = 1)) +
  scale_y_continuous(breaks = seq(-20, 20, by = 2), limits = c(-5, 20)) +
  labs(title = "To parallelforskudte parabler", color = "b")

p4
```

Denne gang kan vi se, at de to parabler er *forskudte*, ikke spejlede. Parablen hvor $b=4$ er ligesom skubbet lidt ned og til venstre. Toppunkterne er markeret med en prik, og man kan se, at toppunktet for $b=4$ netop ligger lidt lavere og lidt længere til venstre vores helt enkle parabel hvor $b=0$ (altså den allerførste vi så på: $y=x^2$.)

Hvad der helt præcist er sket, kan vi godt komme lidt nærmere. Hvis vi tegner en lige linje gennem de to toppunkter kan vi både se og beregne, at dens hældning er netop 2. Hvis vi kalder de to toppunkter for $t_1$ og $t_2$ og aflæser toppunkterne til $t_1 = (-2, -4)$ og $t_2 =(0, 0)$ kan vi at *forskellen* mellem $x$-værdierne er $0-(-2) = 2$ og *forskellen* mellem y-værdierne er $0-(-4) = 4$. Hældningen på en lige linje gennem de to punkter er altså $\frac{4}{2} = 2$.

Lad os prøve at tegne linjen:

```{r plot5}
linje_punkter = tibble(x = x, y = 2 *x)
p4 + geom_line(data = linje_punkter, color = "gray")
```

Man kan altså se, at de to parabler er parallelforskude langs en linje, der netop har hældningen $\frac{b}{2}$, i vores tilfælde $\frac{4}{2} = 2$.

## Hvis man ændrer $c$ ...

Okay, turen er kommet til at se på $c$ i formlen $y = ax^2 + bx + c$. Lad os prøve at sætte $a=2$, $b=1$ og lade $c$ variere, $c=0, 2, 4$.

```{r plot6}
data <- expand_grid(x, b = 1, c = c(0, 2, 4)) |> 
  mutate(y = f(x, 1, b, c))

punkter = data |> filter(x == 0)

ggplot(data, aes(x, y, color = factor(c), group = c)) +
  geom_line(size = 1) +
  geom_point(data = punkter, color = "black", size = 2) +
  scale_x_continuous(breaks = seq(-5, 5, by = 1)) +
  scale_y_continuous(breaks = seq(-20, 20, by = 2), limits = c(-5, 20)) +
  labs(title = "To parallelforskudte parabler", color = "c")
```

Denne her gang kan vi se, at $c$ simpelthen bare er y-værdierne der svarer til $x=0$, det vi også kalder skæringspunktet med y-aksen. (Også selvom jeg her har undladt at tegne y-aksen, så den ikke står i vejen for kurverne.)

Hvis vi tænker på ligningen for en ret linje: $f(x) = ax + b$, kan vi måske huske er her er det $b$ som er skæringspunkt med y-aksen. For andengradsligningen, $f(x) = ax^2 + bx + c$ er det altså $c$ der spiller rollen som skæringspunkt med y-aksen. 

Det er ikke så svært at se, at det må være sådan, for vi kan bare sætte $x=0$ ind i formlerne. For den rette linje har vi: $f(0) = a\cdot0 + b = b$. Og for parablen: $f(0) = a \cdot 0^2 + b\cdot0 + c= c$.

Lad os prøve at sætte det hele sammen i ét plot:

```{r plot7}
data <- expand_grid(x, a = c(-2, 1), b = c(1, 2), c = c(0, 4)) |>
  group_by(a, b, c) |> 
  mutate(group = cur_group_id(),
         group_label = paste0("a =", max(a), ", b =", max(b), ", c = ", max(c)),
         y = f(x, a, b, c)) |>
  ungroup() |> 
  filter(!(a == 1 & b == 2 & c == 4),
         !(a == 1 & b == 1 & c == 0),
         !(a ==-2 & b == 1 & c == 0),
         !(a ==-2 & b == 1 & c == 4))

ggplot(data, aes(x, y, color = group_label)) +
  geom_line(size = 1) +
  scale_x_continuous(breaks = seq(-5, 5, by = 1)) +
  scale_y_continuous(breaks = seq(-20, 20, by = 2), limits = c(-5, 20)) +
  labs(title = "En masse forskellige parabler", color = "a, b og c")
```

## Toppunkt

Indtil videre har vi bare aflæst parablerne toppunkter. Men man kan også *beregne* dem. Her skal vi bruge et ekstra hjælpebegreb som vi kalder *diskriminanten* og får bogstavet $D$. Vi udregner diskriminanten sådan her:

$$ D = b^2 - 4ac $$

Koordinatet til toppunktet for en hvilken som helst parabel er nu:

$$ T = (-\frac{b}{2a}, - \frac{D}{4a}) $$
Tager vi for eksempel vores to parallelforskudte parabler fra før, med forskrifterne $y_1 = x^2$ og $y_2 = x^2 + 4x$, kan vi beregne:

$$ D_1 = 0^2 -4 \cdot 1 \cdot 0 = 0 $$
og:

$$ D_2 = 4^2 -4 \cdot 1 \cdot 0 = 16 $$

De to toppunkter er nu:

$$ T_1 = (-\frac{0}{2}, - \frac{0}{4}) = (0, 0) $$
og:

$$ T_2 = (-\frac{4}{2}, - \frac{15}{4}) = (-2, -4) $$

Vi kan lige tjekke plottet fra før og se om det passer:

```{r plot8}
p4
```

Det passer sørme!

## Rødder

## Tre punkter
